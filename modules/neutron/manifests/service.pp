class neutron::service{
    Exec{
        path=>"/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:/bin:/sbin",
        logoutput=>"on_failure",
    }
    exec{"neutron_sync":
        command=>"su -s /bin/sh -c \"neutron-db-manage --config-file /etc/neutron/neutron.conf --config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade head\" neutron",
        require=>Class["neutron::config"],
        notify=>Exec["neutron-nova-api"],
    }
    exec{"neutron-nova-api":
        command=>"service nova-api restart",
        require=>Exec["neutron_sync"],
        notify=>Service["neutron-server"],
    }
    service{"neutron-server":
        ensure=>running,
        hasstatus=>true,
        hasrestart=>true,
        enable=>true,
        require=>Exec["neutron-nova-api"],
        notify=>Service["neutron-linuxbridge-agent"],
    }
    service{"neutron-linuxbridge-agent":
        ensure=>running,
        hasstatus=>true,
        hasrestart=>true,
        enable=>true,
        require=>Service["neutron-server"],
        notify=>Service["neutron-dhcp-agent"],
    }
    service{"neutron-dhcp-agent":
        ensure=>running,
        hasstatus=>true,
        hasrestart=>true,
        enable=>true,
        require=>Service["neutron-linuxbridge-agent"],
        notify=>Service["neutron-metadata-agent"],
    }
    service{"neutron-metadata-agent":
        ensure=>running,
        hasstatus=>true,
        hasrestart=>true,
        enable=>true,
        require=>Service["neutron-dhcp-agent"],
        notify=>Service["neutron-l3-agent"],
    }
    service{"neutron-l3-agent":
        ensure=>running,
        hasstatus=>true,
        hasrestart=>true,
        enable=>true,
        require=>Service["neutron-metadata-agent"],
        notify=>Class["dashboard"],
    }
}
